#!/bin/bash

l1=$1
l2=$2

##### Расскраска
RED="\e[31m"; YELLOW="\e[33m"; GREEN="\e[32m"; ENDCOLOR="\e[0m"
echo_r() {
  echo -e "${RED} $1 ${ENDCOLOR}"
}
echo_y() {
  echo -e "${YELLOW} $1 ${ENDCOLOR}"
}
echo_g() {
  echo -e "${GREEN} $1 ${ENDCOLOR}"
}

### Установка Docker
install_docker() {
  ###
  DOCKER_COMPOSE_VERSION="v2.19.1"
  ###
  err=0
  # Install docker and compose
  for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done
  sudo apt-get update
  sudo apt-get install ca-certificates curl gnupg -y
  sudo install -m 0755 -d /etc/apt/keyrings
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --yes --dearmor -o /etc/apt/keyrings/docker.gpg
  sudo chmod a+r /etc/apt/keyrings/docker.gpg
  echo \
    "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
    "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  sudo apt-get update
  sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
  err=$(($err+$?))
  docker_version=`docker -v |cut -d " " -f 3 |sed 's/,//'`
  docker_compose_version=`docker compose version |cut -d " " -f 4`
  # Install docker-compose
  sudo curl -SL https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-linux-x86_64 -o /usr/bin/docker-compose
  err=$(($err+$?))
  sudo chmod +x /usr/bin/docker-compose
  Docker_compose_version=`docker-compose -v |cut -d " " -f 3`
  # Add user to docker group
  sudo groupadd docker 2>/dev/null
  sudo usermod -aG docker $USER
  [ $err  -eq 0 ] && echo_g "Установка docker версии $docker_version, docker compose версии $docker_compose_version, docker-compose версии $Docker_compose_version выполнена успешно" \
                  || ( echo_r "Установка Docker прошла с ошибками"; exit; )
}

### Парсинг параметров второго уровня
parse_install_level2() {
case $l2 in
  docker)
    install_docker
    ;;
  *)
    echo_r "Не известный параметр. Доступные параметры sau install: docker"; exit 1
    ;;
esac

}

### Парсинг параметров первого уровня
parse_level1() {
case $l1 in
  install)
    parse_install_level2
    ;;
  li | hu)
    echo "lihu"
    ;;
  *)
    echo_r "Не известный параметр. Доступные параметры sau: install"; exit 1
    ;;
esac
}

### Старт
parse_level1
